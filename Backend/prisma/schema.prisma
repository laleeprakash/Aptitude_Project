  // This is your Prisma schema file,
  // learn more about it in the docs: https://pris.ly/d/prisma-schema

  // Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
  // Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

  generator client {
    provider = "prisma-client-js"
    output   = "../generated/prisma"
  }

  datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
  }
  model User {
    id       Int     @id @default(autoincrement())
    username String  @unique
    email    String  @unique
    password String
    scores   Score[]
  }

  model Category {
    id           Int           @id @default(autoincrement())
    name         String
    subcategories Subcategory[]
    scores        Score[]
  }

  model Subcategory {
    id           Int        @id @default(autoincrement())
    name         String
    description  String
    category     Category   @relation(fields: [categoryId], references: [id])
    categoryId   Int
    questions    Question[]
    scores       Score[]
  }


  model Question {
    id            Int         @id @default(autoincrement())
    question_text String
    option_a      String
    option_b      String
    option_c      String
    option_d      String
    correct_option String
    subcategory   Subcategory @relation(fields: [subcategoryId], references: [id])
    subcategoryId Int
  }

  model Score {
    id             Int        @id @default(autoincrement())
    user           User       @relation(fields: [userId], references: [id])
    userId         Int
    category       Category   @relation(fields: [categoryId], references: [id])
    categoryId     Int
    subcategory    Subcategory @relation(fields: [subcategoryId], references: [id])
    subcategoryId  Int
    score          Int
    total_questions Int
    feedback       String
  }